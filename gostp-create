#!/bin/sh
source $(dirname $0)/_gostp-define
source $(dirname $0)/_gostp-build

#start setup app config ...
echo "[i] Staring xcode project configuration ..."
cd "$dest_app_path"

fastlane init -u $user_id

if ! grep -qE "$fastfile_init_flag" $fastfile_path
then
  fastfile_content=$(cat "$fastfile_path")
  cat >$fastfile_path <<EOF
$fastfile_init_flag
username "$user_id"
produce(username:"$user_id", app_name:"$itc_display_name", app_identifier:"$bundle_id", skip_itc:false)
produce(username:"$user_id", app_name:"$extension_name", app_identifier:"$extension_bundle_id", skip_itc:true)
sigh(app_identifier:"$bundle_id")
sigh(app_identifier:"$extension_bundle_id")
update_project_provisioning(xcodeproj:"$name.xcodeproj",profile: "./AppStore_$bundle_id.mobileprovision", target_filter:"$name")
update_project_provisioning(xcodeproj:"$name.xcodeproj",profile: "./AppStore_$extension_bundle_id.mobileprovision", target_filter:"$extension_name")
${fastfile_content}
EOF
fi

fastlane release

if [ $? -eq 0 ]; then
  #touch itc was succeed
  sed -i -e 's/skip_itc:false/skip_itc:true/g' $fastfile_path

  #insert finshed flag
  if ! grep -qE "$fastfile_created_flag" $fastfile_path
  then
    fastfile_content=$(cat "$fastfile_path")
    cat >$fastfile_path <<EOF
  $fastfile_created_flag
  ${fastfile_content}
EOF
  fi

  # init git
  if [ $skip_git_actions -eq 0 ]; then
    cd $dest
    git_was_initialied=$(([ -d .git ] && echo .git) || git rev-parse --git-dir 2> /dev/null)
    if [ ! "$git_was_initialied" ]; then
      echo "[i] Not found git repo. Integrating git ..."
      git init
      git add . && git commit -m "[Initialized - $name]"
    fi
    cd -
  fi

  #print app path (if succeess)
  echo "$dest"
else
  echo "[!] Something wroing while configure and register a project!"
  exit 1
fi
